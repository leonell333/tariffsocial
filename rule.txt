rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isPostOwner() {
      return request.auth.uid == resource.data.ownerId;
    }

    function isCommentOwner() { 
      return request.auth.token.email == resource.data.useremail;
    }

    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.admin == true;
    }

    match /users/{userId} {
      allow read: if true;

      allow update: if isSignedIn() && (
        isOwner(userId) || isAdmin()
      );

      allow delete: if isAdmin();

      match /dms/{dmUserId} {
        allow read, write, delete: if isSignedIn() && (
          isOwner(userId) || request.auth.uid == dmUserId
        );
      }

      // Followers subcollection
      match /followers/{followerId} {
        allow create, delete: if isSignedIn() && (
          request.auth.uid == followerId || isOwner(userId)
        );
      }

      // Follows subcollection
      match /follows/{followId} {
        allow create, delete: if isSignedIn() && (
          request.auth.uid == userId || request.auth.uid == followId
        );
      }
    }

     match /messages/{messageId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(request.auth.uid));
      allow delete: if isSignedIn() && (isOwner(request.auth.uid) || isAdmin());
    }

    match /posts/{postId} {
      allow read: if true;
      allow create, update: if isSignedIn();
      allow delete: if isSignedIn() && (isPostOwner() || isAdmin());

      // Comments under a post
      match /comments/{commentId} {
        allow read: if true;
        allow update: if isSignedIn() && isCommentOwner();
        allow delete: if isSignedIn() && (isCommentOwner() || isAdmin());
      }

      // Interactions subcollection under posts
      match /interactions/{userId} {
        allow delete: if isSignedIn() && (isPostOwner() || isAdmin());
      }

      // Replies under a comment
      match /comments/{commentId}/replies/{replyId} {
        allow read: if true;
        allow update: if isSignedIn() && isCommentOwner();
        allow delete: if isSignedIn() && (isCommentOwner() || isAdmin());
      }
    }

    match /{document=**} {
      allow read: if true;
      allow create, update: if isSignedIn();
      // delete must be explicitly declared above
    }
  }
}

